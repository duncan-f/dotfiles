#!/usr/bin/env bash

folder="$HOME/.cache/lockscreen"
wallpaper="$HOME/.config/wallpaper.png"

dimscreen="$folder/dimscreen.png"
blurscreen="$folder/blurscreen.png"
dimblurscreen="$folder/dimblurscreen.png"
resized="$folder/resized.png"

l_dimscreen="$folder/l_dimscreen.png"
l_blurscreen="$folder/l_blurscreen.png"
l_dimblurscreen="$folder/l_dimblurscreen.png"
l_resized="$folder/l_resized.png"

usage() {
    echo "lockscreen [option] [value]"
}

update() {
    echo "Generating temporary images for lockscreen..."

    [ -d "$folder" ] || mkdir -p "$folder"

    # find your resolution so images can be resized to match your screen resolution
    resolution=$(xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/')

    if [ -n "$1" ]; then
        if [ -f "$1" ]; then
            convert "$1" -resize "$resolution""^" -gravity center -extent "$resolution" "$resized"
        else
            echo "File '$1' does not exist."
            exit 1
        fi
    else
            convert "$wallpaper" -resize "$resolution""^" -gravity center -extent "$resolution" "$resized"
    fi

    convert $resized -blur 0x5 $blurscreen
    convert $resized -fill black -colorize 40% $dimscreen
    convert $dimscreen -blur 0x5 $dimblurscreen

    # ratio for rectangle to be drawn for time background on lockscreen
    rectangles=" "
    SR=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*')
    for RES in $SR; do
        SRA=(${RES//[x+]/ })
        CX=$((${SRA[2]} + 25))
        CY=$((${SRA[1]} - 30))
        rectangles+="rectangle $CX,$CY $((CX+300)),$((CY-80)) "
    done

    # add transparent rectangle as background for datetime
    convert $resized -draw "fill rgba(0, 0, 0, 0.4) $rectangles" $l_resized
    convert $dimscreen -draw "fill rgba(0, 0, 0, 0.4) $rectangles" $l_dimscreen
    convert $dimblurscreen -draw "fill rgba(0, 0, 0, 0.4) $rectangles" $l_dimblurscreen
    convert $blurscreen -draw "fill rgba(0, 0, 0, 0.4) $rectangles" $l_blurscreen
    echo "Temporary images generated successfully."
}

prelock() {
	[ ! -z "$(pidof dunst)" ] && pkill -u "$USER" -USR1 dunst
}

postlock() {
	[ ! -z "$(pidof dunst)" ] && pkill -u "$USER" -USR2 dunst
}

lock() {
i3lock -i $1 --timepos="x+140:h-70" \
        --datepos="tx+24:ty+25" \
        --clock --datestr "%a, %b %d" \
        --insidecolor=00000000 --ringcolor=ffffffff --line-uses-inside \
        --keyhlcolor=d23c3dff --bshlcolor=d23c3dff --separatorcolor=00000000 \
        --insidevercolor=fecf4dff --insidewrongcolor=d23c3dff \
        --ringvercolor=ffffffff --ringwrongcolor=ffffffff --indpos="x+280:h-70" \
        --radius=20 --ring-width=3 --veriftext="" --wrongtext="" --noinputtext="" \
        --timecolor="ffffffff" --datecolor="ffffffff"
}


lockoption() {
    prelock
    case "$1" in
        dim) lock "$l_dimscreen" ;;
        blur) lock "$l_blurscreen" ;;
        dimblur) lock "$l_dimblurscreen" ;;
        *) lock "$l_resized" ;;
    esac
    postlock
}

case "$1" in
    -u | --update) update "$2" ;;
    -l | --lock) lockoption "$2" ;;
    -w | --wallpaper)
       case "$2" in
           dim) feh --bg-fill $dimscreen ;;
           blur) feh --bg-fill $blurscreen ;;
           dimblur) feh --bg-fill $dimblurscreen ;;
           *) feh --bg-fill $resized ;;
       esac
         ;;
    *) usage ;;
esac

